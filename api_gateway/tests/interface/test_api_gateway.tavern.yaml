---
test_name: Create user, product, category, create purchase order and create review

includes:
  - !include tavern_api_gateway_variables.yaml

stages:
  - name: Create user
    request:
      url: "{api_gateway_base_url:s}/users"
      method: POST
      json:
        username: "{user_name:s}"
        email: "{email:s}"
        password: "{password:s}"
      headers:
        content-type: application/json
    response:
      status_code: 201
      json:
        id: !anyint
        username: "{user_name:s}"
        email: "{email:s}"
      headers:
        content-type: application/json
      save:
        json:
          new_user_id: id

  - name: Create category
    request:
      url: "{api_gateway_base_url:s}/categories"
      method: POST
      json:
        name: "{category_name:s}"
      headers:
        content-type: application/json
    response:
      status_code: 201
      json:
        id: !anyint
        name: "{category_name:s}"
      headers:
        content-type: application/json
      save:
        json:
          new_category_id: id

  - name: Create product value
    request:
      url: "{api_gateway_base_url:s}/products"
      method: POST
      json:
        user_id: !int "{new_user_id:d}"
        name: "{product_name:s}"
        price: 20.40
        category_id: !int "{new_category_id:d}"
        tags: ["Tag 1", "Tag 2"]
        stock: 5
      headers:
        content-type: application/json
    response:
      status_code: 201
      json:
        id: !anyint
        name: "{product_name:s}"
        category: !anydict
        price: 20.40
        stock: 5
        score: 0
        owner: !anydict
        tags: !anylist
      headers:
        content-type: application/json
      save:
        json:
          new_product_id: id

  - name: Consultar todos los productos
    request:
      url: "{api_gateway_base_url:s}/products"
      method: GET
    response:
      status_code: 200

  - name: Agregar un producto al shopping cart
    request:
      url: "{api_gateway_base_url:s}/shopping-cart/{new_user_id:d}/{new_product_id:d}"
      method: PUT
      json:
        quantity: 2
      headers:
        content-type: application/json
    response:
      status_code: 204

  - name: Realiza la compra de los productos que se encuentran en el shopping cart
    request:
      url: "{api_gateway_base_url:s}/shopping-cart/{new_user_id:d}/checkout"
      method: POST
      json:
        payment_method: "CREDIT_CARD"
        card_number: "123456789012345"
        expiration_year: 2022
        expiration_month: 3
        cvv: "123"
        card_type: "VISA"
        comments: "Comments"
      headers:
        content-type: application/json
    response:
      status_code: 204

  - name: El usuario revisa sus ordenes de compra
    request:
      url: "{api_gateway_base_url:s}/purchase-orders/{new_user_id:d}"
      method: GET
    response:
      status_code: 200

  - name: Create Review
    request:
      url: "{api_gateway_base_url:s}/reviews/{new_product_id:d}"
      method: POST
      json:
        description: "Review Example"
        user_id: !int "{new_user_id:d}"
        score: 1
      headers:
        content-type: application/json
    response:
      status_code: 201
      json:
        id: !anyint
        product_id: !int "{new_product_id:d}"
        user_id: !int "{new_user_id:d}"
        score: 1
        review_body: !anystr
        creation_date: !anystr
      headers:
        content-type: application/json

  - name: El usuario obtiene las reseñas del producto del que realizo una reseña.
    request:
      url: "{api_gateway_base_url:s}/reviews?product-id={new_product_id:d}"
      method: GET
    response:
      status_code: 200
      headers:
        content-type: application/json

  - name: Get product with score updated
    request:
      url: "{api_gateway_base_url:s}/products/{new_product_id:d}"
      method: GET
    response:
      status_code: 200
      json:
        id: !int "{new_product_id:d}"
        name: "{product_name:s}"
        category: !anydict
        price: 20.40
        stock: !anyint
        score: 1
        owner: !anydict
        tags: !anylist
      headers:
        content-type: application/json
