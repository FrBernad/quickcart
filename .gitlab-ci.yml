# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

image: docker:latest

variables:
  IMAGE_BASE: "$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"

stages:
  - prep
  - build
  - test
  - deliver
  - deploy

preparation:
  stage: prep
  tags:
    - dev
  script:
    - export BUILD_ID=$(date +%Y%m%d%H%M)
    - echo "BUILD_ID=${BUILD_ID}" > context.env

    - echo "API_PROD_IMAGE_NAME=${IMAGE_BASE}/api:prod-${BUILD_ID}"       >> context.env
    - echo "API_TEST_IMAGE_NAME=${IMAGE_BASE}/api:test-${BUILD_ID}"       >> context.env
    - echo "CLIENT_PROD_IMAGE_NAME=${IMAGE_BASE}/client:prod-${BUILD_ID}" >> context.env
    - echo "CLIENT_TEST_IMAGE_NAME=${IMAGE_BASE}/client:test-${BUILD_ID}" >> context.env

    - echo "DOCKER_HUB_API_IMAGE=$DOCKER_HUB_USER/foodtruckers-api:${BUILD_ID}"         >> context.env
    - echo "DOCKER_HUB_CLIENT_IMAGE=$DOCKER_HUB_USER/foodtruckers-client:${BUILD_ID}"   >> context.env
  artifacts: 
    paths: 
      - context.env

build-api:
  stage: build
  tags:
    - dev
  script:
    - export $(cat context.env | xargs)

    - docker build users-api -f users-api/Dockerfile -t ${API_PROD_IMAGE_NAME}
    - docker build users-api -f users-api/Dockerfile.test --build-arg "BASE_IMAGE=$API_PROD_IMAGE_NAME" -t ${API_TEST_IMAGE_NAME}

    - docker login -u $CI_REGISTRY_USER --password $CI_JOB_TOKEN $CI_REGISTRY

    - docker push ${API_PROD_IMAGE_NAME}
  needs:
    - job: preparation
      artifacts: true

stages:
- test
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
