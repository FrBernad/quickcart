.users_service_variables: &users_service_variables
  SERVICE_NAME: "users_api"
  SERVICE_PATH: "users/users_service"

build_users_service:
  extends: .build_service
  variables: *users_service_variables

test_users_service:
  extends: .test_service
  variables: 
    ENV: "test"
  script:
    - !reference [.login_to_gitlab_registry]
    
    - docker compose -f docker-compose.yml --env-file ${SERVICE_PATH}/.env_files/.env.test --profile ${SERVICE_NAME} stop
    - docker compose -f docker-compose.yml --env-file ${SERVICE_PATH}/.env_files/.env.test --profile ${SERVICE_NAME} rm
    - docker compose -f docker-compose.yml --env-file ${SERVICE_PATH}/.env_files/.env.test --profile ${SERVICE_NAME} pull
    - docker compose -f docker-compose.yml --env-file ${SERVICE_PATH}/.env_files/.env.test --profile ${SERVICE_NAME} up --abort-on-container-exit
    - docker cp ${SERVICE_NAME}_${ENV}:/usr/src/app/coverage.xml .
    - docker cp ${SERVICE_NAME}_${ENV}:/usr/src/app/report.xml .
  artifacts:
    when: always
    paths:
      - coverage.xml
      - report.xml
    reports:
      junit: report.xml
  needs:
    - job: build_users_service
      artifacts: true

deliver_users_dockerhub:
  extends: .deliver_dockerhub
  variables: *users_service_variables
  needs:
    - job: build_users_service
      artifacts: true
    - job: test_users_service
      artifacts: false